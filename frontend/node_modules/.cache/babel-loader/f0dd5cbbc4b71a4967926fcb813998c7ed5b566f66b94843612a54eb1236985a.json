{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/projetos/faculdade/medic_diagnosis_system/frontend/src/components/JanelaModal.js\",\n  _s = $RefreshSig$();\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, FormControl, FormLabel, Input } from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JanelaModal = _ref => {\n  _s();\n  let {\n    data,\n    setData,\n    dataEdit,\n    isOpen,\n    onClose\n  } = _ref;\n  const [cpf, setCpf] = useState(dataEdit.cpf || \"\");\n  const [name, setName] = useState(dataEdit.name || \"\");\n  const [age, setAge] = useState(dataEdit.age || \"\");\n  const [sintomasSelecionados, setSintomasSelecionados] = useState([]);\n  const [listaDoencas, setListaDoencas] = useState([]);\n  useEffect(() => {\n    fetch(\"../componentslista_doencas.txt\").then(response => response.text()).then(data => setListaDoencas(data.split(\"\\n\")));\n  }, []);\n  // Renderiza as checkboxes com os labels\n\n  const handleSintomasChange = e => {\n    const sintomaSelecionado = e.target.value;\n    const isChecked = e.target.checked;\n    if (isChecked) {\n      setSintomasSelecionados([...sintomasSelecionados, sintomaSelecionado]);\n    } else {\n      setSintomasSelecionados(sintomasSelecionados.filter(sintoma => sintoma !== sintomaSelecionado));\n    }\n  };\n  const handleSave = () => {\n    if (!cpf || !name) return;\n    if (Object.keys(dataEdit).length) {\n      data[dataEdit.index] = {\n        cpf,\n        name\n      };\n    }\n    const newDataArray = !Object.keys(dataEdit).length ? [...(data ? data : []), {\n      cpf,\n      name\n    }] : [...(data ? data : [])];\n    localStorage.setItem(\"cad_cliente\", JSON.stringify(newDataArray));\n    setData(newDataArray);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Cadastro de Paciente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            display: \"flex\",\n            flexDir: \"column\",\n            gap: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"CPF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: cpf,\n              onChange: e => setCpf(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Idade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              value: age,\n              onChange: e => setAge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Sintomas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), dataEdit.sintomas.map((sintoma, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: `sintoma-${index}`,\n                checked: dataEdit.sintomas[index] === 1,\n                onChange: handleSintomasChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: `sintoma-${index}`,\n                children: [listaDoencas[index], \" - \", sintoma]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          justifyContent: \"start\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"green\",\n            mr: 3,\n            onClick: handleSave,\n            children: \"SALVAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            onClick: onClose,\n            children: \"CANCELAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(JanelaModal, \"xSWnXu3En5uKICx3n1YLnElGDGc=\");\n_c = JanelaModal;\nexport default JanelaModal;\nvar _c;\n$RefreshReg$(_c, \"JanelaModal\");","map":{"version":3,"names":["Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","FormControl","FormLabel","Input","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","JanelaModal","_ref","_s","data","setData","dataEdit","isOpen","onClose","cpf","setCpf","name","setName","age","setAge","sintomasSelecionados","setSintomasSelecionados","listaDoencas","setListaDoencas","fetch","then","response","text","split","handleSintomasChange","e","sintomaSelecionado","target","value","isChecked","checked","filter","sintoma","handleSave","Object","keys","length","index","newDataArray","localStorage","setItem","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDir","gap","type","onChange","sintomas","map","id","htmlFor","justifyContent","colorScheme","mr","onClick","_c","$RefreshReg$"],"sources":["/home/gabriel/projetos/faculdade/medic_diagnosis_system/frontend/src/components/JanelaModal.js"],"sourcesContent":["import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n} from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\n\nconst JanelaModal = ({ data, setData, dataEdit, isOpen, onClose }) => {\n  const [cpf, setCpf] = useState(dataEdit.cpf || \"\");\n  const [name, setName] = useState(dataEdit.name || \"\");\n  const [age, setAge] = useState(dataEdit.age || \"\");\n  const [sintomasSelecionados, setSintomasSelecionados] = useState([]);\n\n  const [listaDoencas, setListaDoencas] = useState([]);\n\n  useEffect(() => {\n    fetch(\"../componentslista_doencas.txt\")\n      .then((response) => response.text())\n      .then((data) => setListaDoencas(data.split(\"\\n\")));\n  }, []);\n  // Renderiza as checkboxes com os labels\n\n  const handleSintomasChange = (e) => {\n    const sintomaSelecionado = e.target.value;\n    const isChecked = e.target.checked;\n\n    if (isChecked) {\n      setSintomasSelecionados([...sintomasSelecionados, sintomaSelecionado]);\n    } else {\n      setSintomasSelecionados(\n        sintomasSelecionados.filter((sintoma) => sintoma !== sintomaSelecionado)\n      );\n    }\n  };\n\n  const handleSave = () => {\n    if (!cpf || !name) return;\n\n    if (Object.keys(dataEdit).length) {\n      data[dataEdit.index] = { cpf, name };\n    }\n\n    const newDataArray = !Object.keys(dataEdit).length\n      ? [...(data ? data : []), { cpf, name }]\n      : [...(data ? data : [])];\n\n    localStorage.setItem(\"cad_cliente\", JSON.stringify(newDataArray));\n\n    setData(newDataArray);\n\n    onClose();\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Cadastro de Paciente</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl display=\"flex\" flexDir=\"column\" gap={4}>\n              <FormLabel>CPF</FormLabel>\n              <Input\n                type=\"text\"\n                value={cpf}\n                onChange={(e) => setCpf(e.target.value)}\n              />\n\n              <FormLabel>Nome</FormLabel>\n              <Input\n                type=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n\n              <FormLabel>Idade</FormLabel>\n              <Input\n                type=\"number\"\n                value={age}\n                onChange={(e) => setAge(e.target.value)}\n              />\n\n              <FormLabel>Sintomas</FormLabel>\n              {/* Loop para renderizar uma checkbox para cada sintoma */}\n              {dataEdit.sintomas.map((sintoma, index) => (\n                <div key={index}>\n                  <input\n                    type=\"checkbox\"\n                    id={`sintoma-${index}`}\n                    checked={dataEdit.sintomas[index] === 1}\n                    onChange={handleSintomasChange}\n                  />\n                  <label htmlFor={`sintoma-${index}`}>\n                    {listaDoencas[index]} - {sintoma}\n                  </label>\n                </div>\n              ))}\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter justifyContent=\"start\">\n            <Button colorScheme=\"green\" mr={3} onClick={handleSave}>\n              SALVAR\n            </Button>\n            <Button colorScheme=\"red\" onClick={onClose}>\n              CANCELAR\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default JanelaModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}