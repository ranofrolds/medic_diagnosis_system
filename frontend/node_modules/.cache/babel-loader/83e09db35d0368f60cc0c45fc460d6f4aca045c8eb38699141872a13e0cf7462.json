{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/projetos/faculdade/medic_diagnosis_system/frontend/src/components/JanelaModal.js\",\n  _s = $RefreshSig$();\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, FormControl, FormLabel, Input, Checkbox } from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport axiosInstance from \"./axiosInstances\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JanelaModal = _ref => {\n  _s();\n  let {\n    data,\n    setData,\n    dataEdit,\n    isOpen,\n    onClose\n  } = _ref;\n  const [cpf, setCpf] = useState(dataEdit.cpf || \"\");\n  const [name, setName] = useState(dataEdit.name || \"\");\n  const [age, setAge] = useState(dataEdit.age || \"\");\n  const [sintomasSelecionados, setSintomasSelecionados] = useState(dataEdit.sintoma);\n  const listaSintomas = [\"coceira\", \"dor_na_pele\", \"dor_no_corpo\", \"fadiga\", \"febre\", \"febre_alta\", \"inflamacao_na_pele\", \"palidez\", \"perda_de_peso\", \"chiado_no_peito\", \"falta_de_ar\", \"tosse_persistente\", \"tosse_seca\", \"dor_de_cabeca\", \"nausea\", \"sensibilidade_a_luz\", \"tontura\", \"visao_turva\", \"coceira_anal\", \"dor_ao_evacuar\", \"sangramento_ao_evacuar\", \"azia\", \"dor_no_estomago\"];\n\n  // Renderiza as checkboxes com os labels\n\n  const handleSintomasChange = e => {\n    const {\n      id,\n      checked\n    } = e.target;\n    const sintomaIndex = parseInt(id.split(\"-\")[1]);\n    const sintomasSelecionadosTemp = [...sintomasSelecionados];\n    sintomasSelecionadosTemp[sintomaIndex] = checked ? \"1\" : \"0\";\n    setSintomasSelecionados(sintomasSelecionadosTemp);\n  };\n  const handleSave = () => {\n    if (!cpf || !name) return;\n    const obj = {\n      cpf: cpf,\n      nome: name,\n      idade: age,\n      sintomas: sintomasSelecionados.join(\"|\") + \"|\"\n    };\n    axiosInstance.post(\"/atualizar_paciente\", obj).then(resposta => {\n      console.log(resposta);\n    }).catch(erro => {\n      console.error(\"Erro GET:\", erro.message);\n    });\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Cadastro de Paciente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            display: \"flex\",\n            flexDir: \"column\",\n            gap: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"CPF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: cpf,\n              onChange: e => setCpf(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Idade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              value: age,\n              onChange: e => setAge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Sintomas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), dataEdit.sintomas.map((sintoma, index) => /*#__PURE__*/_jsxDEV(Checkbox, {\n              value: sintoma,\n              isChecked: parseInt(sintoma) === 1,\n              onChange: handleSintomasChange,\n              children: listaSintomas[index]\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          justifyContent: \"start\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"green\",\n            mr: 3,\n            onClick: handleSave,\n            children: \"SALVAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            onClick: onClose,\n            children: \"CANCELAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(JanelaModal, \"I3OwkfRShENUP5asnFyF/8x0D94=\");\n_c = JanelaModal;\nexport default JanelaModal;\nvar _c;\n$RefreshReg$(_c, \"JanelaModal\");","map":{"version":3,"names":["Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","FormControl","FormLabel","Input","Checkbox","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","Fragment","_Fragment","JanelaModal","_ref","_s","data","setData","dataEdit","isOpen","onClose","cpf","setCpf","name","setName","age","setAge","sintomasSelecionados","setSintomasSelecionados","sintoma","listaSintomas","handleSintomasChange","e","id","checked","target","sintomaIndex","parseInt","split","sintomasSelecionadosTemp","handleSave","obj","nome","idade","sintomas","join","post","then","resposta","console","log","catch","erro","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDir","gap","type","value","onChange","map","index","isChecked","justifyContent","colorScheme","mr","onClick","_c","$RefreshReg$"],"sources":["/home/gabriel/projetos/faculdade/medic_diagnosis_system/frontend/src/components/JanelaModal.js"],"sourcesContent":["import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Checkbox,\n} from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport axiosInstance from \"./axiosInstances\";\n\nconst JanelaModal = ({ data, setData, dataEdit, isOpen, onClose }) => {\n  const [cpf, setCpf] = useState(dataEdit.cpf || \"\");\n  const [name, setName] = useState(dataEdit.name || \"\");\n  const [age, setAge] = useState(dataEdit.age || \"\");\n  const [sintomasSelecionados, setSintomasSelecionados] = useState(dataEdit.sintoma);\n  const listaSintomas = [\n    \"coceira\",\n    \"dor_na_pele\",\n    \"dor_no_corpo\",\n    \"fadiga\",\n    \"febre\",\n    \"febre_alta\",\n    \"inflamacao_na_pele\",\n    \"palidez\",\n    \"perda_de_peso\",\n    \"chiado_no_peito\",\n    \"falta_de_ar\",\n    \"tosse_persistente\",\n    \"tosse_seca\",\n    \"dor_de_cabeca\",\n    \"nausea\",\n    \"sensibilidade_a_luz\",\n    \"tontura\",\n    \"visao_turva\",\n    \"coceira_anal\",\n    \"dor_ao_evacuar\",\n    \"sangramento_ao_evacuar\",\n    \"azia\",\n    \"dor_no_estomago\",\n  ];\n\n  // Renderiza as checkboxes com os labels\n\n  const handleSintomasChange = (e) => {\n    const { id, checked } = e.target;\n    const sintomaIndex = parseInt(id.split(\"-\")[1]);\n    const sintomasSelecionadosTemp = [...sintomasSelecionados];\n    sintomasSelecionadosTemp[sintomaIndex] = checked ? \"1\" : \"0\";\n    setSintomasSelecionados(sintomasSelecionadosTemp);\n  };\n\n  const handleSave = () => {\n    if (!cpf || !name) return;\n\n    const obj = {\n      cpf: cpf,\n      nome: name,\n      idade: age,\n      sintomas: sintomasSelecionados.join(\"|\") + \"|\",\n    };\n\n    axiosInstance\n      .post(\"/atualizar_paciente\", obj)\n      .then((resposta) => {\n        console.log(resposta);\n      })\n      .catch((erro) => {\n        console.error(\"Erro GET:\", erro.message);\n      });\n\n    onClose();\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Cadastro de Paciente</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl display=\"flex\" flexDir=\"column\" gap={4}>\n              <FormLabel>CPF</FormLabel>\n              <Input\n                type=\"text\"\n                value={cpf}\n                onChange={(e) => setCpf(e.target.value)}\n              />\n\n              <FormLabel>Nome</FormLabel>\n              <Input\n                type=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n\n              <FormLabel>Idade</FormLabel>\n              <Input\n                type=\"number\"\n                value={age}\n                onChange={(e) => setAge(e.target.value)}\n              />\n\n              <FormLabel>Sintomas</FormLabel>\n              {/* Loop para renderizar uma checkbox para cada sintoma */}\n              {dataEdit.sintomas.map((sintoma, index) => (\n                <Checkbox\n                  key={index}\n                  value={sintoma}\n                  isChecked={parseInt(sintoma) === 1}\n                  onChange={handleSintomasChange}\n                >\n                  {listaSintomas[index]}\n                </Checkbox>\n              ))}\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter justifyContent=\"start\">\n            <Button colorScheme=\"green\" mr={3} onClick={handleSave}>\n              SALVAR\n            </Button>\n            <Button colorScheme=\"red\" onClick={onClose}>\n              CANCELAR\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default JanelaModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}