{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/projetos/faculdade/medic_diagnosis_system/frontend/src/components/JanelaModal.js\",\n  _s = $RefreshSig$();\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, FormControl, FormLabel, Input, Checkbox } from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport axiosInstance from \"./axiosInstances\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JanelaModal = _ref => {\n  _s();\n  let {\n    data,\n    setData,\n    dataEdit,\n    isOpen,\n    onClose\n  } = _ref;\n  const [cpf, setCpf] = useState(dataEdit.cpf || \"\");\n  const [name, setName] = useState(dataEdit.name || \"\");\n  const [age, setAge] = useState(dataEdit.age || \"\");\n  const [sintomasSelecionados, setSintomasSelecionados] = useState([]);\n  const [listaSintomas, setListaSintomas] = useState([]);\n  useEffect(() => {\n    fetch(\"../../../backend/database/help_sintomas.txt\").then(response => response.text()).then(data => setListaSintomas(data.split(\"\\n\")));\n  }, []);\n  // Renderiza as checkboxes com os labels\n\n  const handleSintomasChange = e => {\n    const sintomasSelecionadosTemp = [...sintomasSelecionados];\n    const sintomaIndex = parseInt(e.target.id.split(\"-\")[1]);\n    sintomasSelecionadosTemp[sintomaIndex] = e.target.checked ? 1 : 0;\n    setSintomasSelecionados(sintomasSelecionadosTemp);\n  };\n  const handleSave = () => {\n    if (!cpf || !name) return;\n    const obj = {\n      cpf: cpf,\n      nome: name,\n      idade: age,\n      sintomas: sintomasSelecionados.join(\"|\") + \"|\"\n    };\n    axiosInstance.post(\"/atualizar_paciente\", obj).then(resposta => {\n      console.log(resposta);\n    }).catch(erro => {\n      console.error(\"Erro GET:\", erro.message);\n    });\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Cadastro de Paciente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            display: \"flex\",\n            flexDir: \"column\",\n            gap: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"CPF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: cpf,\n              onChange: e => setCpf(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Idade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              value: age,\n              onChange: e => setAge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Sintomas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this), dataEdit.sintomas.map((sintoma, index) => /*#__PURE__*/_jsxDEV(Checkbox, {\n              value: sintoma,\n              isChecked: sintomas.map,\n              onChange: handleSintomasChange,\n              children: sintoma\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          justifyContent: \"start\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"green\",\n            mr: 3,\n            onClick: handleSave,\n            children: \"SALVAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            onClick: onClose,\n            children: \"CANCELAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(JanelaModal, \"B3eFfx6ctMtj+bGcfbhwZhs4zVM=\");\n_c = JanelaModal;\nexport default JanelaModal;\nvar _c;\n$RefreshReg$(_c, \"JanelaModal\");","map":{"version":3,"names":["Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","FormControl","FormLabel","Input","Checkbox","useState","useEffect","axiosInstance","jsxDEV","_jsxDEV","Fragment","_Fragment","JanelaModal","_ref","_s","data","setData","dataEdit","isOpen","onClose","cpf","setCpf","name","setName","age","setAge","sintomasSelecionados","setSintomasSelecionados","listaSintomas","setListaSintomas","fetch","then","response","text","split","handleSintomasChange","e","sintomasSelecionadosTemp","sintomaIndex","parseInt","target","id","checked","handleSave","obj","nome","idade","sintomas","join","post","resposta","console","log","catch","erro","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDir","gap","type","value","onChange","map","sintoma","index","isChecked","justifyContent","colorScheme","mr","onClick","_c","$RefreshReg$"],"sources":["/home/gabriel/projetos/faculdade/medic_diagnosis_system/frontend/src/components/JanelaModal.js"],"sourcesContent":["import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Checkbox,\n} from \"@chakra-ui/react\";\nimport { useState, useEffect } from \"react\";\nimport axiosInstance from \"./axiosInstances\";\n\nconst JanelaModal = ({ data, setData, dataEdit, isOpen, onClose }) => {\n  const [cpf, setCpf] = useState(dataEdit.cpf || \"\");\n  const [name, setName] = useState(dataEdit.name || \"\");\n  const [age, setAge] = useState(dataEdit.age || \"\");\n  const [sintomasSelecionados, setSintomasSelecionados] = useState([]);\n\n  const [listaSintomas, setListaSintomas] = useState([]);\n\n  useEffect(() => {\n    fetch(\"../../../backend/database/help_sintomas.txt\")\n      .then((response) => response.text())\n      .then((data) => setListaSintomas(data.split(\"\\n\")));\n  }, []);\n  // Renderiza as checkboxes com os labels\n\n  const handleSintomasChange = (e) => {\n    const sintomasSelecionadosTemp = [...sintomasSelecionados];\n    const sintomaIndex = parseInt(e.target.id.split(\"-\")[1]);\n    sintomasSelecionadosTemp[sintomaIndex] = e.target.checked ? 1 : 0;\n    setSintomasSelecionados(sintomasSelecionadosTemp);\n  };\n\n  const handleSave = () => {\n    if (!cpf || !name) return;\n\n    const obj = {\n      cpf: cpf,\n      nome: name,\n      idade: age,\n      sintomas: sintomasSelecionados.join(\"|\") + \"|\",\n    };\n\n    axiosInstance\n      .post(\"/atualizar_paciente\", obj)\n      .then((resposta) => {\n        console.log(resposta);\n      })\n      .catch((erro) => {\n        console.error(\"Erro GET:\", erro.message);\n      });\n\n    onClose();\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Cadastro de Paciente</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl display=\"flex\" flexDir=\"column\" gap={4}>\n              <FormLabel>CPF</FormLabel>\n              <Input\n                type=\"text\"\n                value={cpf}\n                onChange={(e) => setCpf(e.target.value)}\n              />\n\n              <FormLabel>Nome</FormLabel>\n              <Input\n                type=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n\n              <FormLabel>Idade</FormLabel>\n              <Input\n                type=\"number\"\n                value={age}\n                onChange={(e) => setAge(e.target.value)}\n              />\n\n              <FormLabel>Sintomas</FormLabel>\n              {/* Loop para renderizar uma checkbox para cada sintoma */}\n              {dataEdit.sintomas.map((sintoma, index) => (\n                <Checkbox\n                  key={index}\n                  value={sintoma}\n                  isChecked={sintomas.map}\n                  onChange={handleSintomasChange}\n                >\n                  {sintoma}\n                </Checkbox>\n              ))}\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter justifyContent=\"start\">\n            <Button colorScheme=\"green\" mr={3} onClick={handleSave}>\n              SALVAR\n            </Button>\n            <Button colorScheme=\"red\" onClick={onClose}>\n              CANCELAR\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default JanelaModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}