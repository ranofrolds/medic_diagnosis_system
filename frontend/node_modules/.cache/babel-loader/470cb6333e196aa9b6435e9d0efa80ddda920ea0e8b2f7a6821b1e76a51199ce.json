{"ast":null,"code":"export default function formatarDados(dados) {\n  const [cpf, nome, idade, sintomas1, sintomas2, sintomas3, sintomas4, sintomas5] = dados; // Desestrutura o array para obter cada elemento\n\n  // Remove as aspas duplas e converte os valores de idade e sintomas para números\n  const cpfFormatado = cpf.replace(/\"/g, \"\");\n  const nomeFormatado = nome.replace(/\"/g, \"\");\n  const idadeFormatada = parseInt(idade.replace(/\"/g, \"\"), 10);\n  let sintomasFormatados = Object.values(JSON.parse(sintomas1));\n  const sintomas = [sintomas2, sintomas3, sintomas4, sintomas5];\n  sintomas.forEach(sintoma => {\n    sintomasFormatados.concat(Object.values(JSON.parse(sintoma))).map(valor => Number(valor));\n  });\n\n  // Retorna o objeto JSON formatado\n  return {\n    cpf: cpfFormatado,\n    nome: nomeFormatado,\n    idade: idadeFormatada,\n    sintomas: sintomasFormatados.join(\"|\") + \"|\"\n  };\n}","map":{"version":3,"names":["formatarDados","dados","cpf","nome","idade","sintomas1","sintomas2","sintomas3","sintomas4","sintomas5","cpfFormatado","replace","nomeFormatado","idadeFormatada","parseInt","sintomasFormatados","Object","values","JSON","parse","sintomas","forEach","sintoma","concat","map","valor","Number","join"],"sources":["/home/gabriel/projetos/faculdade/medic_diagnosis_system/frontend/src/components/formatarDados.js"],"sourcesContent":["export default function formatarDados(dados) {\n    const [\n      cpf,\n      nome,\n      idade,\n      sintomas1,\n      sintomas2,\n      sintomas3,\n      sintomas4,\n      sintomas5,\n    ] = dados; // Desestrutura o array para obter cada elemento\n  \n    // Remove as aspas duplas e converte os valores de idade e sintomas para números\n    const cpfFormatado = cpf.replace(/\"/g, \"\");\n    const nomeFormatado = nome.replace(/\"/g, \"\");\n    const idadeFormatada = parseInt(idade.replace(/\"/g, \"\"), 10);\n  \n    let sintomasFormatados = Object.values(JSON.parse(sintomas1));\n    const sintomas = [sintomas2, sintomas3, sintomas4, sintomas5];\n    sintomas.forEach((sintoma) => {\n      sintomasFormatados\n        .concat(Object.values(JSON.parse(sintoma)))\n        .map((valor) => Number(valor));\n    });\n  \n    // Retorna o objeto JSON formatado\n    return {\n      cpf: cpfFormatado,\n      nome: nomeFormatado,\n      idade: idadeFormatada,\n      sintomas: sintomasFormatados.join(\"|\") + \"|\",\n    };\n  }\n\n"],"mappings":"AAAA,eAAe,SAASA,aAAaA,CAACC,KAAK,EAAE;EACzC,MAAM,CACJC,GAAG,EACHC,IAAI,EACJC,KAAK,EACLC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,CACV,GAAGR,KAAK,CAAC,CAAC;;EAEX;EACA,MAAMS,YAAY,GAAGR,GAAG,CAACS,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EAC1C,MAAMC,aAAa,GAAGT,IAAI,CAACQ,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EAC5C,MAAME,cAAc,GAAGC,QAAQ,CAACV,KAAK,CAACO,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;EAE5D,IAAII,kBAAkB,GAAGC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACd,SAAS,CAAC,CAAC;EAC7D,MAAMe,QAAQ,GAAG,CAACd,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,CAAC;EAC7DW,QAAQ,CAACC,OAAO,CAAEC,OAAO,IAAK;IAC5BP,kBAAkB,CACfQ,MAAM,CAACP,MAAM,CAACC,MAAM,CAACC,IAAI,CAACC,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAC1CE,GAAG,CAAEC,KAAK,IAAKC,MAAM,CAACD,KAAK,CAAC,CAAC;EAClC,CAAC,CAAC;;EAEF;EACA,OAAO;IACLvB,GAAG,EAAEQ,YAAY;IACjBP,IAAI,EAAES,aAAa;IACnBR,KAAK,EAAES,cAAc;IACrBO,QAAQ,EAAEL,kBAAkB,CAACY,IAAI,CAAC,GAAG,CAAC,GAAG;EAC3C,CAAC;AACH"},"metadata":{},"sourceType":"module","externalDependencies":[]}