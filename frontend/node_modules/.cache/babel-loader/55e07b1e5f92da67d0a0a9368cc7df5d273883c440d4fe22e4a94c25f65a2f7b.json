{"ast":null,"code":"var _jsxFileName = \"/home/gabriel/projetos/faculdade/medic_diagnosis_system/frontend/src/components/JanelaModal.js\",\n  _s = $RefreshSig$();\nimport { Modal, ModalOverlay, ModalContent, ModalHeader, ModalFooter, ModalBody, ModalCloseButton, Button, FormControl, FormLabel, Input, Checkbox } from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst JanelaModal = _ref => {\n  _s();\n  let {\n    data,\n    setData,\n    dataEdit,\n    isOpen,\n    onClose\n  } = _ref;\n  const [cpf, setCpf] = useState(dataEdit.cpf || \"\");\n  const [name, setName] = useState(dataEdit.name || \"\");\n  const [age, setAge] = useState(dataEdit.age || \"\");\n  const [sintomasSelecionados, setSintomasSelecionados] = useState([]);\n  const handleSintomasChange = e => {\n    const sintomaSelecionado = e.target.value;\n    const isChecked = e.target.checked;\n    if (isChecked) {\n      setSintomasSelecionados([...sintomasSelecionados, sintomaSelecionado]);\n    } else {\n      setSintomasSelecionados(sintomasSelecionados.filter(sintoma => sintoma !== sintomaSelecionado));\n    }\n  };\n  const handleSave = () => {\n    if (!cpf || !name) return;\n    if (Object.keys(dataEdit).length) {\n      data[dataEdit.index] = {\n        cpf,\n        name\n      };\n    }\n    const newDataArray = !Object.keys(dataEdit).length ? [...(data ? data : []), {\n      cpf,\n      name\n    }] : [...(data ? data : [])];\n    localStorage.setItem(\"cad_cliente\", JSON.stringify(newDataArray));\n    setData(newDataArray);\n    onClose();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isOpen,\n      onClose: onClose,\n      children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n        children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n          children: \"Cadastro de Paciente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n          children: /*#__PURE__*/_jsxDEV(FormControl, {\n            display: \"flex\",\n            flexDir: \"column\",\n            gap: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"CPF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"text\",\n              value: cpf,\n              onChange: e => setCpf(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Nome\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Idade\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              type: \"number\",\n              value: age,\n              onChange: e => setAge(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Sintomas\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), dataEdit.sintomas.map((sintoma, index) => /*#__PURE__*/_jsxDEV(Checkbox, {\n              value: sintoma,\n              isChecked: sintomasSelecionados.includes(sintoma),\n              onChange: handleSintomasChange,\n              children: sintoma\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n          justifyContent: \"start\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"green\",\n            mr: 3,\n            onClick: handleSave,\n            children: \"SALVAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            colorScheme: \"red\",\n            onClick: onClose,\n            children: \"CANCELAR\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(JanelaModal, \"S7tRdyXXK3ez7tnrXV1EptxmNRE=\");\n_c = JanelaModal;\nexport default JanelaModal;\nvar _c;\n$RefreshReg$(_c, \"JanelaModal\");","map":{"version":3,"names":["Modal","ModalOverlay","ModalContent","ModalHeader","ModalFooter","ModalBody","ModalCloseButton","Button","FormControl","FormLabel","Input","Checkbox","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","JanelaModal","_ref","_s","data","setData","dataEdit","isOpen","onClose","cpf","setCpf","name","setName","age","setAge","sintomasSelecionados","setSintomasSelecionados","handleSintomasChange","e","sintomaSelecionado","target","value","isChecked","checked","filter","sintoma","handleSave","Object","keys","length","index","newDataArray","localStorage","setItem","JSON","stringify","children","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDir","gap","type","onChange","sintomas","map","includes","justifyContent","colorScheme","mr","onClick","_c","$RefreshReg$"],"sources":["/home/gabriel/projetos/faculdade/medic_diagnosis_system/frontend/src/components/JanelaModal.js"],"sourcesContent":["import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  FormControl,\n  FormLabel,\n  Input,\n  Checkbox,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\n\nconst JanelaModal = ({ data, setData, dataEdit, isOpen, onClose }) => {\n  const [cpf, setCpf] = useState(dataEdit.cpf || \"\");\n  const [name, setName] = useState(dataEdit.name || \"\");\n  const [age, setAge] = useState(dataEdit.age || \"\");\n  const [sintomasSelecionados, setSintomasSelecionados] = useState([]);\n\n  const handleSintomasChange = (e) => {\n    const sintomaSelecionado = e.target.value;\n    const isChecked = e.target.checked;\n\n    if (isChecked) {\n      setSintomasSelecionados([...sintomasSelecionados, sintomaSelecionado]);\n    } else {\n      setSintomasSelecionados(\n        sintomasSelecionados.filter((sintoma) => sintoma !== sintomaSelecionado)\n      );\n    }\n  };\n\n  const handleSave = () => {\n    if (!cpf || !name) return;\n\n\n    if (Object.keys(dataEdit).length) {\n      data[dataEdit.index] = { cpf, name };\n    }\n\n    const newDataArray = !Object.keys(dataEdit).length\n      ? [...(data ? data : []), { cpf, name }]\n      : [...(data ? data : [])];\n\n    localStorage.setItem(\"cad_cliente\", JSON.stringify(newDataArray));\n\n    setData(newDataArray);\n\n    onClose();\n  };\n\n  return (\n    <>\n      <Modal isOpen={isOpen} onClose={onClose}>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader>Cadastro de Paciente</ModalHeader>\n          <ModalCloseButton />\n          <ModalBody>\n            <FormControl display=\"flex\" flexDir=\"column\" gap={4}>\n              <FormLabel>CPF</FormLabel>\n              <Input\n                type=\"text\"\n                value={cpf}\n                onChange={(e) => setCpf(e.target.value)}\n              />\n\n              <FormLabel>Nome</FormLabel>\n              <Input\n                type=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n\n              <FormLabel>Idade</FormLabel>\n              <Input\n                type=\"number\"\n                value={age}\n                onChange={(e) => setAge(e.target.value)}\n              />\n\n              <FormLabel>Sintomas</FormLabel>\n              {/* Loop para renderizar uma checkbox para cada sintoma */}\n              {dataEdit.sintomas.map((sintoma, index) => (\n                <Checkbox\n                  key={index}\n                  value={sintoma}\n                  isChecked={sintomasSelecionados.includes(sintoma)}\n                  onChange={handleSintomasChange}\n                >\n                  {sintoma}\n                </Checkbox>\n              ))}\n            </FormControl>\n          </ModalBody>\n\n          <ModalFooter justifyContent=\"start\">\n            <Button colorScheme=\"green\" mr={3} onClick={handleSave}>\n              SALVAR\n            </Button>\n            <Button colorScheme=\"red\" onClick={onClose}>\n              CANCELAR\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default JanelaModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}