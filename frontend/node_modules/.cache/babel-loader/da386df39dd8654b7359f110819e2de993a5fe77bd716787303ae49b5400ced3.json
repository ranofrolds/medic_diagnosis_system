{"ast":null,"code":"var arrayDeDados = [];\n\n//importa um objeto\nexport default function somarArray(arrayImportado) {\n  //transforma o objeto em array\n  const objParaString = JSON.stringify(arrayImportado);\n  //concatena o antigo array com os novos dados\n  arrayDeDados = arrayDeDados.concat(objParaString);\n  // //printa o array\n  // printarArray(arrayDeDados);\n  return formatarDados(arrayDeDados);\n}\nexport function formatarDados(dados) {\n  const [cpf, nome, idade, sintomas1, sintomas2, sintomas3, sintomas4, sintomas5] = dados; // Desestrutura o array para obter cada elemento\n\n  // Remove as aspas duplas e converte os valores de idade e sintomas para números\n  const cpfFormatado = cpf.replace(/\"/g, '');\n  const nomeFormatado = nome.replace(/\"/g, '');\n  const idadeFormatada = parseInt(idade.replace(/\"/g, ''), 10);\n  let sintomasFormatados = Object.values(JSON.parse(sintomas1));\n  const sintomas = [sintomas2, sintomas3, sintomas4, sintomas5];\n  sintomas.forEach(sintoma => {\n    sintomasFormatados.concat(Object.values(JSON.parse(sintoma))).map(valor => Number(valor));\n  });\n\n  // Retorna o objeto JSON formatado\n  return {\n    cpf: cpfFormatado,\n    nome: nomeFormatado,\n    idade: idadeFormatada,\n    sintomas: sintomasFormatados.join('|') + '|'\n  };\n}\nexport function limparArray() {\n  return arrayDeDados = [];\n}\nexport function printarArray() {\n  console.log(arrayDeDados);\n}","map":{"version":3,"names":["arrayDeDados","somarArray","arrayImportado","objParaString","JSON","stringify","concat","formatarDados","dados","cpf","nome","idade","sintomas1","sintomas2","sintomas3","sintomas4","sintomas5","cpfFormatado","replace","nomeFormatado","idadeFormatada","parseInt","sintomasFormatados","Object","values","parse","sintomas","forEach","sintoma","map","valor","Number","join","limparArray","printarArray","console","log"],"sources":["/home/gabriel/projetos/faculdade/medic_diagnosis_system/frontend/src/components/concatenacaoDados.js"],"sourcesContent":["var arrayDeDados = [];\n\n//importa um objeto\nexport default function somarArray(arrayImportado) {\n  //transforma o objeto em array\n  const objParaString = JSON.stringify(arrayImportado);\n  //concatena o antigo array com os novos dados\n  arrayDeDados = arrayDeDados.concat(objParaString);\n  // //printa o array\n  // printarArray(arrayDeDados);\n  return  formatarDados(arrayDeDados);\n}\n\nexport function formatarDados(dados) {\n  const [cpf, nome, idade, sintomas1, sintomas2, sintomas3, sintomas4, sintomas5] = dados; // Desestrutura o array para obter cada elemento\n\n\n  // Remove as aspas duplas e converte os valores de idade e sintomas para números\n  const cpfFormatado = cpf.replace(/\"/g, '');\n  const nomeFormatado = nome.replace(/\"/g, '');\n  const idadeFormatada = parseInt(idade.replace(/\"/g, ''), 10);\n\n  let sintomasFormatados = Object.values(JSON.parse(sintomas1));\n  const sintomas = [sintomas2, sintomas3, sintomas4, sintomas5];\n  sintomas.forEach(sintoma => {\n    sintomasFormatados.concat(Object.values(JSON.parse(sintoma))).map((valor) => Number(valor));\n  });\n\n  // Retorna o objeto JSON formatado\n  return {\n    cpf: cpfFormatado,\n    nome: nomeFormatado,\n    idade: idadeFormatada,\n    sintomas: sintomasFormatados.join('|') + '|',\n  };\n}\n\nexport function limparArray() {\n  return (arrayDeDados = []);\n}\n\nexport function printarArray() {\n  console.log(arrayDeDados);\n}\n"],"mappings":"AAAA,IAAIA,YAAY,GAAG,EAAE;;AAErB;AACA,eAAe,SAASC,UAAUA,CAACC,cAAc,EAAE;EACjD;EACA,MAAMC,aAAa,GAAGC,IAAI,CAACC,SAAS,CAACH,cAAc,CAAC;EACpD;EACAF,YAAY,GAAGA,YAAY,CAACM,MAAM,CAACH,aAAa,CAAC;EACjD;EACA;EACA,OAAQI,aAAa,CAACP,YAAY,CAAC;AACrC;AAEA,OAAO,SAASO,aAAaA,CAACC,KAAK,EAAE;EACnC,MAAM,CAACC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,CAAC,GAAGR,KAAK,CAAC,CAAC;;EAGzF;EACA,MAAMS,YAAY,GAAGR,GAAG,CAACS,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EAC1C,MAAMC,aAAa,GAAGT,IAAI,CAACQ,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;EAC5C,MAAME,cAAc,GAAGC,QAAQ,CAACV,KAAK,CAACO,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC;EAE5D,IAAII,kBAAkB,GAAGC,MAAM,CAACC,MAAM,CAACpB,IAAI,CAACqB,KAAK,CAACb,SAAS,CAAC,CAAC;EAC7D,MAAMc,QAAQ,GAAG,CAACb,SAAS,EAAEC,SAAS,EAAEC,SAAS,EAAEC,SAAS,CAAC;EAC7DU,QAAQ,CAACC,OAAO,CAACC,OAAO,IAAI;IAC1BN,kBAAkB,CAAChB,MAAM,CAACiB,MAAM,CAACC,MAAM,CAACpB,IAAI,CAACqB,KAAK,CAACG,OAAO,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,KAAK,IAAKC,MAAM,CAACD,KAAK,CAAC,CAAC;EAC7F,CAAC,CAAC;;EAEF;EACA,OAAO;IACLrB,GAAG,EAAEQ,YAAY;IACjBP,IAAI,EAAES,aAAa;IACnBR,KAAK,EAAES,cAAc;IACrBM,QAAQ,EAAEJ,kBAAkB,CAACU,IAAI,CAAC,GAAG,CAAC,GAAG;EAC3C,CAAC;AACH;AAEA,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,OAAQjC,YAAY,GAAG,EAAE;AAC3B;AAEA,OAAO,SAASkC,YAAYA,CAAA,EAAG;EAC7BC,OAAO,CAACC,GAAG,CAACpC,YAAY,CAAC;AAC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}